[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "codemao-sdk"
version = "1.0.0"
description = "🚀 编程猫 Python SDK - 最全面的编程猫社区API封装库"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "CodeMao SDK Team", email = "contact@codemao-sdk.com"}
]
maintainers = [
    {name = "CodeMao SDK Team", email = "contact@codemao-sdk.com"}
]
keywords = ["codemao", "api", "sdk", "python", "education", "community", "coding"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Education",
    "Topic :: Games/Entertainment",
    "Framework :: AsyncIO",
    "Natural Language :: Chinese (Simplified)",
    "Natural Language :: English"
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "typing-extensions>=4.0.0; python_version<'3.10'"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.15.0",
    "tox>=4.0.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=0.18.0"
]
async = [
    "aiohttp>=3.8.0",
    "asyncio-throttle>=1.0.0"
]
all = [
    "codemao-sdk[dev,docs,async]"
]

[project.urls]
Homepage = "https://github.com/nichengfuben/codemao-sdk-for-python"
Documentation = "https://codemao-sdk.readthedocs.io"
Repository = "https://github.com/nichengfuben/codemao-sdk-for-python"
"Bug Tracker" = "https://github.com/nichengfuben/codemao-sdk-for-python/issues"
"Discussions" = "https://github.com/nichengfuben/codemao-sdk-for-python/discussions"
Changelog = "https://github.com/nichengfuben/codemao-sdk-for-python/blob/main/CHANGELOG.md"
"Code of Conduct" = "https://github.com/nichengfuben/codemao-sdk-for-python/blob/main/CODE_OF_CONDUCT.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
codemao-sdk = ["py.typed"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "network: Tests requiring network access"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["codemaokit"]
known_third_party = ["requests", "pytest"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "requests.*"
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".tox",
    ".venv",
    ".eggs",
    "*.egg-info"
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
show_missing = true
precision = 2